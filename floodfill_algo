class Solution {
    void dfs(vector<vector<int>>& image,int sr, int sc,int newColor,int row , int cols,int source)
    {
        //base case
        if(sr<0 || sr>=row || sc<0 || sc>=cols)
            return;
        else if(image[sr][sc]!=source)
            return;
        
        image[sr][sc]=newColor;
        
        //we have 4 choices now up,down,left,right
        dfs(image,sr-1,sc,newColor,row,cols,source);//top
        dfs(image,sr+1,sc,newColor,row,cols,source);//down
        dfs(image,sr,sc-1,newColor,row,cols,source);//left
        dfs(image,sr,sc+1,newColor,row,cols,source);//right
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        
        if(newColor==image[sr][sc])
            return image;
        
        int rows = image.size();
        int cols=image[0].size();
        int source=image[sr][sc];
        dfs(image,sr,sc,newColor,rows,cols,source);
        return image;
        
    }
};
